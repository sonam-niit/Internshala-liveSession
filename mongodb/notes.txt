MongoDB
----------------
Database which is unstructured database.

mysql, oracle, MS SQL Server these are the databases called as structured Database (relational Db), storing values in Tables (combination of rows and columns)

MongoDB: not relational (no SQL database)
	--> creating database
	--> create dollections (group of documents)
	--> create Document (object- JSON or BSON  object)

In one database we can create multiple collections and in one collection we can store multiple documents.

how document looks like:

JSON Object:

{
	"name":"alex",
	"email":"alex@gmail.com",
	"phone":"9892138922",
	"country":"UK"
}

we can insert this object as document in our collection. when new document inserted then it provides a unique key (_id) which is auto generated by mongoDB.

if you insert a document with _id field then it will not create otherwise it will create unique ref key by itself.

How to Work with MongoDB.
---------------------------------
install MongoDB: 

download from below link
---------------------------------
https://www.mongodb.com/try/download/community

download .msi file ouble click on the same and install.

after installation --> continue with MongoDb Compass installation and finish.
=======================================================================================
open mongoSh and execute below commands

>use ecommerce;
(to create new DB, if already created then it will switch to taht 
>db.customer.insertOne({"name":"sonam","address":"Mumbai","email":"sonam@gmail.com"})

(if the collection is available then it will insert the document otherwise it will create new collection and insert document.)

>db.customer.find();
(to fetch all documents inserted inside the collection
>db.customer.insertOne({"name":"alex","address":"us","email":"alex@gmail.com"})
>db.customer.insertOne({"name":"bob","address":"uk","email":"bob@gmail.com"})

(insert some more records)

(to find document whose emailId is sonam@gmsil.com"
>db.customer.find({email:"sonam@gmail.com"});

>db.customer.find({address:"uk"});

(to find documents whose address is uk.

>db.customer.find({address:{$in:["us","uk"]}});
(to find document whose address is either us or uk

this same query we can also write using or operator

>db.customer.find({$or:[{address:"us"},{address:"uk"}]});

>db.customer.find({$and:[{address:"us"},{name:"alex"}]});
(combining conditions using and operator)


>update record
db.customer.updateOne({name:"alex"},{$set:{age:25}})

(update whoize name is alex and set the age property to 25)

>db.customer.find({"age":{$gt:20}});
(find those customers whose age is >20)

{field : {$gt: value}} (syntax)

>db.customer.find({"age":{$lt:20}});

combininhg multiple conditions using and operator
>db.customer.find({$and:[{age:{$gt:18}},{age:{$lt:30}}]});

Methods in mongoDb
-----------------------------

sort() method to sort data
----------------------------------------
>db.customer.find().sort({age:1})

(sort customes on the basis of age in ascending order)

>db.customer.find().sort({name:1});

(sort on the basis of name)

>db.customer.find().sort({name:-1});

(sort in descending order)

>db.customer.find().limit(3);
(fetch only first 3 latest data inserted)
>db.customer.find().skip(3).limit(4);
(skip first 3 documents and after that fetch only 4)





































